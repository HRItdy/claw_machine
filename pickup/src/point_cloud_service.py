#!/usr/bin/env python

import rospy
from sensor_msgs.msg import PointCloud2
from pickup.srv import GetPointCloud, GetPointCloudResponse

class PointCloudService:
    def __init__(self):
        # Initialize the ROS node
        rospy.init_node('pointcloud_service_node')
        
        # Service that provides the point cloud data
        self.service = rospy.Service('/get_pointcloud', GetPointCloud, self.handle_get_pointcloud)

        # Subscriber to the point cloud topic generated by depth_image_proc
        self.pointcloud_data = None
        rospy.Subscriber('/realsense_wrist/depth/points', PointCloud2, self.pointcloud_callback)

    def pointcloud_callback(self, data):
        # Store the received point cloud data
        self.pointcloud_data = data

    def handle_get_pointcloud(self, req):
        # Service handler to return the point cloud
        if self.pointcloud_data is not None:
            return GetPointCloudResponse(self.pointcloud_data)
        else:
            rospy.logwarn("No point cloud data received yet")
            return GetPointCloudResponse()

    def run(self):
        rospy.spin()

if __name__ == '__main__':
    pointcloud_service = PointCloudService()
    pointcloud_service.run()
